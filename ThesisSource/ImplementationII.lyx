#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 220
\textclass essex
\begin_preamble
\input{shortheader.tex}
\usepackage{algorithmic}
\end_preamble
\language english
\inputencoding auto
\fontscheme default
\graphics default
\float_placement !htb
\paperfontsize 10
\spacing single 
\papersize a4paper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\topmargin 0.15in
\rightmargin 0.15in
\bottommargin 0.15in
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Comment


\size huge 
Chapter 5
\layout Standard

The system described in Chapter 
\begin_inset LatexCommand \ref{main:implementation}

\end_inset 

 stored the population directly in on-chip 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
acf{LUT}
\end_inset 

 memory.
 It also used a sequential model of operation.
 Consequently, it suffered from two major deficiencies.
 Firstly, because of the inefficiencies of using LUTs to store individuals,
 the size of the population that could be handled was very small -- in the
 region of 16 individuals.
 Secondly, the sequential nature of the select-breed-evaluate sequence resulted
 in a non-linear relationship between the number of parallel evaluations
 and the speed-up observed.
 This chapter describes a number of architectural changes that address the
 issues of population size and throughput.
\layout Standard

The chapter begins with a description of the architectural changes.
 The experimental setup is then presented together with some experimental
 results that illustrate the effect of the changes.
 The changes are then discussed and areas for further work are suggested.
\layout Section

System Architecture
\layout Subsection

Extending the Population Size
\layout Standard

In the revised architecture, large populations are supported by storing
 the entire population in off-chip 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
acf{SRAM}
\end_inset 

.
 The Celoxica RC1000 board has 8\SpecialChar ~
MiB of SRAM arranged as 4 banks of 2\SpecialChar ~
MiB
 that can be directly addressed by the FPGA.
 Each bank is configured as 512\SpecialChar ~
Ki 32bit words.
 One bank is used for storing the results of the run (fitness and lengths
 of each individual), leaving three banks available for the population.
 The total population size is determined by the program size chosen and
 the size of the program nodes.
 Table 
\begin_inset LatexCommand \ref{Table:Population sizes}

\end_inset 

 illustrates the potential range that can be accommodated for a node size
 of 32 bits.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout ShortCaption

Possible population sizes when using three 2\SpecialChar ~
MiB memory banks.
\layout Caption


\begin_inset LatexCommand \label{Table:Population sizes}

\end_inset 

Possible population sizes when using three 2\SpecialChar ~
MiB memory banks and a word
 size of 32 bits for different program sizes.
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="8">
<features>
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row topline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Max program Length (words)
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

16
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

32
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

64
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

128
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

256
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

512
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

1024
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Max population size
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

98\SpecialChar ~
304
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

49\SpecialChar ~
152
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

24\SpecialChar ~
576
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

12\SpecialChar ~
288
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

6\SpecialChar ~
144
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

3\SpecialChar ~
072
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

1\SpecialChar ~
536
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 


\layout Standard

No attempt has been made to compress more than one node into a 32 bit word.
 If even larger populations are needed then this could yield a possible
 4 fold increase assuming an 8 bit node.
 Because access to external memory is a bottleneck, a small working subset
 of the population as well as the total population fitness values and some
 control information is kept in on-chip 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
acf{BRAM}
\end_inset 

 on the FPGA where they can be accessed more efficiently by the logic.
 From the survey in Chapter 
\begin_inset LatexCommand \ref{main:GP Introduction}

\end_inset 

, Figure 
\begin_inset LatexCommand \vref{cap:Population-sizes-where}

\end_inset 

, it can be seen that these population sizes would allow many GP problems
 to be implemented using the RC1000 hardware.
 
\layout Standard

External SRAM can only be written to or read from once per clock cycle,
 so care was taken in the design to ensure that parallel access to memory
 would not occur.
 Similarly, the on-chip BRAM must not be accessed more than once per clock
 cycle so concurrent access to the BRAMs is achieved by partitioning the
 BRAMs into smaller blocks that can be accessed in parallel, and by using
 the dual port features of the BRAMs.
 
\layout Comment

Access to the SRAM is controlled by the pipeline.
\layout Standard

The internal program representation using a linear sequence of instructions
 and a register machine remains unchanged.
\layout Subsection


\begin_inset LatexCommand \label{sub:Replacement-Strategy}

\end_inset 

Replacement Strategy
\layout Standard

In conventional steady-state GP, once an individual has been evaluated it
 replaces the worst individual in the population.
 In a hardware implementation with parallel fitness evaluations this is
 expensive to implement since a global search is required.
 An alternative to this, called survival-driven evolution, has been successfully
 used by Shackleford 
\shape italic 
et al.

\shape default 
 
\begin_inset LatexCommand \cite{shackleford:2001}

\end_inset 

.
 In Shackleford's scheme, only offspring that are fitter than the worst
 of their two parents will survive into the next generation by replacing
 one of the parents.
 This removes the need for any global search.
 A similar approach is used by Yoshida 
\shape italic 
et al.

\shape default 
 
\begin_inset LatexCommand \cite{yoshida:2001}

\end_inset 

.
\layout Standard

This scheme was adapted to the current work by maintaining a record of the
 fitness of one of the parents of each individual.
 After crossover, each new individual is composed of two parts, one from
 each parent.
 One parent is designated the 
\shape italic 
root
\shape default 
 parent, and the other the 
\shape italic 
tail
\shape default 
 parent.
 The fitness of the root parent is used to decide whether a child should
 replace its parent in the main population after its fitness has been evaluated.
 If a child has the same fitness or better fitness than its root parent,
 it will replace its root parent in the main population.
 In the following example, 
\begin_inset Formula $x(n)$
\end_inset 

 is used to indicate an individual 
\begin_inset Formula $x$
\end_inset 

 with fitness 
\begin_inset Formula $n$
\end_inset 

 and 
\begin_inset Formula $x*(n)$
\end_inset 

 indicates a child individual whose root parent is 
\begin_inset Formula $x$
\end_inset 

.
 The lower the value of 
\begin_inset Formula $n$
\end_inset 

 the fitter the individual.
 Consider two individuals 
\begin_inset Formula $a(10)$
\end_inset 

 and 
\begin_inset Formula $b(8)$
\end_inset 

 which have been selected for breeding.
 After crossover, two new individuals, 
\begin_inset Formula $a*$
\end_inset 

 and 
\begin_inset Formula $b*$
\end_inset 

, are created.
 After fitness evaluation, these have fitness values of 
\begin_inset Formula $a*(9)$
\end_inset 

 and 
\begin_inset Formula $b*(9)$
\end_inset 

.
 Because 
\begin_inset Formula $a*(9)$
\end_inset 

 is better than its root parent, 
\begin_inset Formula $a(10)$
\end_inset 

, it will replace 
\begin_inset Formula $a(10)$
\end_inset 

 in the main population.
 However, 
\begin_inset Formula $b*(9)$
\end_inset 

 is not as fit as its root parent, 
\begin_inset Formula $b(8)$
\end_inset 

, so it will not replace its root parent in the main population.
\layout Subsection

Using Pipelines to Improve Performance
\layout Standard

Implementing algorithmic parallelism, or pipelining, is a frequently used
 technique in hardware design that reduces the number of clock cycles needed
 to perform complex operations 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

 and has been used in previous hardware implementations of GAs and GP 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
ref{sub:Implementing-the-Logic}
\end_inset 

.
 In particular, Scott 
\begin_inset LatexCommand \cite{scott:1994}

\end_inset 

 and Shackleford 
\emph on 
et al
\emph default 
.
 
\begin_inset LatexCommand \cite{shackleford:2001}

\end_inset 

 used coarse grained pipelines so that the evolutionary steps and the fitness
 steps were carried out in parallel.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend 
\end_inset 

 The revised design uses two types of pipelines: a coarse grained control
 pipeline, and fine grained execution pipelines.
 The coarse grained control pipeline is responsible for executing the fitness
 evaluation in parallel with the other stages of GP.
 The four major GP operations are divided among the stages of the pipeline:
 selection of individuals from the population for breeding, breeding new
 individuals, fitness evaluation of the individuals and replacement of the
 new individuals in the population.
 To control access to the main population in SRAM during the selection phase,
 which reads individuals from SRAM into BRAM, and writing modified programs
 back to SRAM, these two operations are combined into one stage so that
 they execute in sequence.
 Breeding is closely tied to selection and needs to occur before evaluation
 can take place so this is combined into the selection phase.
 Figure 
\begin_inset LatexCommand \ref{fig:Overall architecture}

\end_inset 

 illustrates the flow of control and the coarse-grained control pipeline.
 
\layout Standard


\begin_inset Float figure
placement h
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/arch-ii.eps
	display monochrome
	size_type 1
	width 5in
	keepAspectRatio
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 8cm

\end_inset 


\layout ShortCaption

Overall architecture of the pipelined GP system.
\layout Caption


\begin_inset LatexCommand \label{fig:Overall architecture}

\end_inset 

Overall control flow of the pipelined GP system.
 Stage\SpecialChar ~
1 runs continuously generating random numbers and counting cycles.
 Stage\SpecialChar ~
2 is the main GP machine which is itself a pipeline consisting of
 two stages.
 The multiple instances of Fitness Evaluation indicates that there may be
 many copies of this function, all operating in parallel.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

 The pipeline in Stage\SpecialChar ~
2 is formed by feeding the output of Stage 2a into
 Stage2b.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend 
\end_inset 


\end_inset 


\layout Standard

Stage\SpecialChar ~
1 runs continuously, with the random number generator creating a new
 random number every clock cycle.
 The random numbers are available to the rest of the machine with no overhead.
 Stage\SpecialChar ~
1 also contains the logic for counting cycles.
 Stage\SpecialChar ~
2 is the main GP machine and consists of two sub-stages.
 Communication between the WriteBack/Select/Breed sub-stage (stage\SpecialChar ~
2a) and
 the Evaluate/Replace sub-stage (stage\SpecialChar ~
2b) is via a two dimensional array
 of individuals in block RAM, indexed by a global phase index which is toggled
 each time stages\SpecialChar ~
2a and 2b complete.
 The WriteBack phase updates the main population in SRAM with the result
 of the preceding Evaluate/Replace phase.
 The Select phase selects a series of two parents, using tournament selection,
 and copies the selected individuals from SRAM to the on-chip BRAM.
 The Breed phase then creates a series of new individuals ready for stage
 2b to use.
 Stage 2b performs parallel evaluations of the individuals and then determines
 which individuals should be replaced.
 The individuals identified for replacement are in turn written back to
 the main population at the start of the next WriteBack/Select/Breed sub-stage.
 The wait between evaluation and replacement is needed because both selection
 and replacement require access to the global fitness vector.
 In practice, the wait only comes into play when the evaluation phase takes
 less time than WriteBack and Selection which only happens for very simple
 fitness functions.
\layout Standard

The operation of the design is shown in Figure 
\begin_inset LatexCommand \ref{fig:Illustration-of-operation}

\end_inset 

 where the first six iterations of stages\SpecialChar ~
2a and 2b are shown.
 The diagram shows the main population, held in SRAM, and its associated
 control data.
 It also shows the state of the two sub-sets of the main population held
 in BRAM.
 These are labelled BRAM 
\emph on 
X
\emph default 
 and BRAM 
\emph on 
Y
\emph default 
.
 The illustration shows the case where the design has been configured for
 two parallel fitness evaluations.
 If more parallel fitness evaluations are configured, then BRAM 
\emph on 
X
\emph default 
 and BRAM 
\emph on 
Y
\emph default 
 will contain more individuals.
 The population size in this example is 8.
 The following describes the operation of the design in detail for the first
 six iterations of the main loop of stage\SpecialChar ~
2 in Figure 
\begin_inset LatexCommand \ref{fig:Overall architecture}

\end_inset 

, starting after the initial program creation stage.
 The worst fitness value is 15.
\layout Standard


\begin_inset Float figure
placement H
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/animation.eps
	display default
	size_type 1
	width 7in
	keepAspectRatio
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 10cm

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{fig:Illustration-of-operation}

\end_inset 

Illustration of the operation of the pipelined implementation.
\end_inset 


\layout Subsubsection*
\noindent 

\begin_inset ERT
status Open

\layout Standard

\backslash 
newpage 
\end_inset 


\begin_inset ERT
status Open

\layout Standard

\backslash 
noindent
\end_inset 

 Step1.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2a
\emph default 
.
 Two individuals, 
\shape italic 
b
\shape default 
 and 
\shape italic 
d
\shape default 
, are selected, using tournament selection, and copied from SRAM into BRAM
 
\shape italic 
X
\shape default 
.
 The control flags are updated to indicate that 
\shape italic 
b
\shape default 
 and 
\shape italic 
d
\shape default 
 are no longer available for selection.
 This is indicated by the solid block at the bottom right of the individual.
 After selection, two new individuals are created using the breeding operators.
 These are denoted 
\shape italic 
b*
\shape default 
 and 
\shape italic 
d*
\shape default 
.
 
\layout Description
\noindent 
Stage\SpecialChar ~
2b.
 At this point, there are no individuals in BRAM 
\shape italic 
Y
\shape default 
, so nothing will be done in this step.
\layout Subsubsection*
\noindent 
Step 2.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2a
\emph default 
.
 Two new individuals, 
\shape italic 
f
\shape default 
 and 
\shape italic 
h,
\shape default 
 are chosen for BRAM 
\emph on 
Y
\emph default 
.
 Note that individuals 
\shape italic 
b
\shape default 
 and 
\shape italic 
d 
\shape default 
were not valid candidates for selection.
 Again, the control flags are updated to indicate that individuals 
\shape italic 
f
\shape default 
 and 
\shape italic 
h
\shape default 
 cannot be selected.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2b
\emph default 
.
 Individuals 
\shape italic 
b*
\shape default 
 and 
\shape italic 
d*
\shape default 
 in BRAM 
\shape italic 
X
\shape default 
 are evaluated.
 When the evaluations are complete, the individuals have new fitness values.
 These fitness values are used to determine which, if any, of the individuals
 are better than their parents, and so can be written back to the main populatio
n.
 The replacement strategy is described in Section 
\begin_inset LatexCommand \ref{sub:Replacement-Strategy}

\end_inset 

.
 If an individual has the same fitness or is fitter than its parent, then
 it is marked as being ready to be written back to SRAM.
 This is shown by the filled block at the top right of the individual.
\layout Subsubsection*
\noindent 
Step 3.
 
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2a.

\emph default 
 Individuals marked for being written to SRAM in BRAM 
\emph on 
X
\emph default 
 ( 
\shape italic 
b*
\shape default 
 and 
\shape italic 
d
\shape default 
*) are copied back to SRAM.
 This updates the individual programs in SRAM and updates their fitness
 values.
 It also clears their control flags so that they are now available for selection.
 When the WriteBack has completed, two new individuals (
\emph on 
d
\emph default 
 and 
\emph on 
a
\emph default 
) are selected and copied to BRAM 
\emph on 
X
\emph default 
.
 Note that both of the individuals just written back ( 
\shape italic 
b
\shape default 
 and 
\shape italic 
d
\shape default 
) were valid candidates for this selection.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2b.
 
\emph default 
The individuals in BRAM 
\emph on 
Y
\emph default 
 are being evaluated, and their replacement status is also updated.
 Both individuals 
\shape italic 
f*
\shape default 
 and 
\shape italic 
h*
\shape default 
 are better then their parents, so they will be written back to SRAM.
\layout Subsubsection*
\noindent 
Step 4.
 
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2a.

\emph default 
 Individuals 
\shape italic 
b'
\shape default 
 and 
\shape italic 
h'
\shape default 
 are selected and copied to BRAM 
\emph on 
Y
\emph default 
.
 These are used to create two new individuals 
\shape italic 
b'*
\shape default 
 and 
\shape italic 
h'*
\shape default 
.
 The notation 
\shape italic 
b'
\shape default 
 and 
\shape italic 
h'
\shape default 
 indicates that these individuals have already been modified once in a previous
 step.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2b
\emph default 
.
 Individuals 
\shape italic 
d*
\shape default 
 and 
\shape italic 
a*
\shape default 
 in BRAM 
\emph on 
X
\emph default 
 are evaluated and their replacement status is marked.
 Note, in this step, individual 
\shape italic 
d*
\shape default 
 has a worse fitness value than its parent, 
\shape italic 
d
\shape default 
, so will not be written back to the main population in SRAM.
 However, individual 
\shape italic 
a*
\shape default 
 is better than its parent, 
\shape italic 
a
\shape default 
, so is scheduled to be written back.
\layout Subsubsection*
\noindent 
Step 5.
 
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2a.
 
\emph default 
Individual 
\shape italic 
a*
\shape default 
 is written back to the main population and the control flags for individuals
 
\shape italic 
a'
\shape default 
 and 
\shape italic 
d'
\shape default 
 are cleared.
 Two more individuals, 
\shape italic 
e
\shape default 
 and 
\shape italic 
c
\shape default 
, are chosen and copied to BRAM 
\emph on 
X
\emph default 
.
\layout Description
\noindent 

\emph on 
Stage\SpecialChar ~
2b.
 
\emph default 
Individuals 
\shape italic 
b'*
\shape default 
 and 
\shape italic 
h'*
\shape default 
 in BRAM 
\emph on 
Y
\emph default 
 are evaluated.
 Individual 
\shape italic 
h'*
\shape default 
 has the same fitness as its parent and is therefore scheduled to be written
 to SRAM in the next step.
\layout Subsubsection*
\noindent 
Step 6 to 
\shape italic 
n
\shape default 
.
 
\layout Description
\noindent 

\series medium 
The
\series default 
 above sequence continues until the required number of generations have
 been completed.
 Execution finishes by writing any valid individuals from BRAM to SRAM before
 outputting the results of the GP run.
\layout Standard

A finer grained level of pipelining is implemented in the fitness evaluation
 function.
 To reduce logic depth, and hence increase the clock frequency, it is often
 advantageous to split a complex expression into more but simpler expressions.
 This usually requires more clock cycles, but by pipelining the operations
 an effective single cycle throughput can be achieved.
 In this design, the function read, and decode is pipelined with the function
 evaluation, though the effectiveness of this is problem specific.
 
\layout Comment

The overall algorithm used in the design is given in the form of pseudo
 code in Appendix 
\begin_inset LatexCommand \vref{main:Algorithm}

\end_inset 

.
\layout Subsection

Measuring Performance
\layout Standard

To compare the performance of different implementations, a way of measuring
 the number of cycles used by the FPGA is needed.
 One possibility is to use the DK1 simulator, but in large designs with
 long running times this can take many hours of running which is often impractic
al.
 An alternative is to include a cycle counter in the design which can be
 read by external programs.
 The internal cycle counter runs in parallel with the rest of the hardware,
 incrementing a counter once per clock cycle.
 This approach could be extended to providing fine-grained measurement of
 the cycles required by the individual phases, which would be valuable for
 evaluating the detailed performance of the design.
\layout Subsection

Obtaining the Results From a Run
\layout Standard

Once the GP machine has finished a run, the best program needs to be communicate
d to the outside world.
 The individual programs are already in SRAM, so they can be read directly
 by the host.
 The program fitness and lengths are copied from BRAM to SRAM when the GP
 machine has finished so they can also be read by the host.
 In addition, the cycle count(s), and other parameters are made available
 to the host via SRAM.
 
\layout Section

Experimental Setup
\layout Standard

The method of communication between the RC1000 board and the host control
 program was modified from that described in Chapter 
\begin_inset LatexCommand \ref{main:implementation}

\end_inset 

.
 The programs were held in the on-board SRAM so they could be accessed directly
 by the host control program.
 Once the run had completed, the FPGA wrote the run details to one of the
 SRAM banks so that the host control program could also gain access to these.
 Access to the on-board SRAM was achieved using DMA via the PCI bus.
 Consequently the host control program needs to be more sophisticated.
 The following is the pseudo-code for the revised host control program.
\layout Standard


\begin_inset Minipage
position 0
inner_position 0
height "0pt"
width "100page%"
collapsed false

\layout LyX-Code


\family roman 
\series bold 
begin
\series default 
 program host-control-2
\newline 
    reset RC1000
\newline 
    configure FPGA
\newline 
    seed the random number generator
\newline 
    signal FPGA to start
\newline 
    wait for FPGA to complete
\newline 
    DMA GP control data to host
\newline 
    DMA GP population to host
\newline 
    search for best individual
\newline 
    output best individual
\newline 

\series bold 
end
\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
noindent 
\end_inset 

The control data contains sufficient information for the host control program
 to identify the problem and the run-time parameters, so that it can present
 the results of the run without requiring 
\shape italic 
a priori
\shape default 
 knowledge of the problem being run.
 The control data contains the problem type as one of an enumerated set
 of values, the population size, the number of generations run for, the
 number of parallel fitness evaluations, the maximum program length, the
 population size, the number of cycles the main loop ran for as well as
 the fitness and program lengths for all programs in the final population.
 The control data is arranged in three pages.
 The page size is the based on the population size which makes the address
 generation within the FPGA simple and efficient .
 The layout of the control data area is shown in Figure 
\begin_inset LatexCommand \ref{fig:Control data layout}

\end_inset 

.
\layout Standard


\begin_inset Float figure
placement htbp
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/control-data.eps
	display color
	size_type 1
	height 8cm
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 177pt
	lyxheight 226pt
\end_inset 


\layout ShortCaption

Layout of the control data SRAM.
\layout Caption


\begin_inset LatexCommand \label{fig:Control data layout}

\end_inset 

Layout of the control data SRAM.
 This is used to communicate the results of a run from the FPGA to a host
 based control program.
\end_inset 


\layout Section

Experiment Descriptions and Results
\layout Subsection


\begin_inset LatexCommand \label{sec: chapter 5 xor}

\end_inset 

Exclusive Or Problem
\layout Standard

This is the same problem already described in Chapter 
\begin_inset LatexCommand \ref{main:implementation}

\end_inset 

, Section 
\begin_inset LatexCommand \vref{sect:XOR problem}

\end_inset 


\layout Subsubsection*

XOR problem results
\layout Standard

The results from running the XOR problem are given in Table 
\begin_inset LatexCommand \ref{table:Results of running the XOR problem-optimised}

\end_inset 

.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout ShortCaption

Results of running the XOR problem.
\layout Caption


\begin_inset LatexCommand \label{table:Results of running the XOR problem-optimised}

\end_inset 

Results of running the XOR problem.
 The results are the average of 10 runs for each configuration, each run
 using a different random seed.
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="8" columns="6">
<features>
<column alignment="left" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Measurement
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

PowerPC
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Handel-C
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Parallel fitness evaluations
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

4
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

8
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Cycles
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

13\SpecialChar ~
723\SpecialChar ~
187
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

74\SpecialChar ~
819
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

73\SpecialChar ~
232
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

72\SpecialChar ~
184
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

81\SpecialChar ~
767
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Clock Frequency
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

200\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

52\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

48\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

42\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

37\SpecialChar ~
MHz
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Number of Slices
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1238
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1247
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1725
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2801
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

183
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

187
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

190
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

167
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $Spe\mathrm{edup}_{\mathrm{time}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

47
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

44
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

39
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

31
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Elapsed time
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

68\SpecialChar ~
ms
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $1.44$
\end_inset 

\SpecialChar ~
ms
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $1.52$
\end_inset 

\SpecialChar ~
ms
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $1.71$
\end_inset 

\SpecialChar ~
ms
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $2.21$
\end_inset 

\SpecialChar ~
ms
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
noindent
\end_inset 

 Comparing these results first with the results in Section 
\begin_inset LatexCommand \ref{sect:XOR problem}

\end_inset 

, which achieved a 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

 of 6 using 4 parallel evaluations, it can be seen that splitting the algorithm
 into two sub-stages gives a useful increase in performance.
 However, the surprising result is that it takes longer to run the XOR problem
 when more evaluations are performed in parallel, in particular with 8 parallel
 evaluations.
 Detailed investigation showed that this was a side effect of the selection
 method.
 During selection, the number of individuals selected from the main population
 is the number of parallel fitness evaluations wanted, and these are selected
 at random from the population, but only those individuals that are not
 currently being evaluated by the Evaluate/Replace sub-stage are valid candidate
s.
 When the number of individuals required is half the population size, many
 more attempts must be made by the selection phase to find valid individuals.
 This explains why when the number of parallel evaluations is 8, the run
 time is greater than when only two individuals are being selected.
\layout Standard

The frequencies in Table 
\begin_inset LatexCommand \ref{table:Results of running the XOR problem-optimised}

\end_inset 

 for the Handel-C implementations is as reported by the place and route
 tools, and takes into account the delays introduced by the combinatorial
 logic and the delays introduced by the routing resources used on the FPGA.
 A lot of effort was spent to reduce the logic and routing delays in the
 design, with the result that this design runs substantially faster that
 the previous design which could only reach 18\SpecialChar ~
MHz.
\layout Standard

Equation 
\begin_inset LatexCommand \vref{EQU:projectedCycles}

\end_inset 

 predicts the worst case number of cycles required for a problem using a
 pipeline.
 Using the figures from Table 
\begin_inset LatexCommand \ref{table:Results of running the XOR problem-optimised}

\end_inset 

 for 4 parallel fitness evaluations and assuming the startup overhead has
 increased to 5000 and the number of clock cycles per instruction 
\begin_inset Formula $c=1$
\end_inset 

, Equation 
\begin_inset LatexCommand \ref{EQU:projectedCycles}

\end_inset 

 predicts that the XOR problem would require 135\SpecialChar ~
816 cycles, which is 1.8
 times the number reported in the experiment.
 This result shows that the pipeline is still effective.
 The difference in predicted versus actual is explained by the fact that
 the prediction assumes all programs to be of maximum length.
\layout Subsection


\begin_inset LatexCommand \label{sub:Artificial-Ant-Problem}

\end_inset 

Artificial Ant Problem
\layout Standard

The objective of this problem is to evolve an ant-like program that can
 traverse a discontinuous trail of food laid out on a toroidal grid.
 The ant has a limited set of moves it can execute and a limited view of
 its surroundings.
\layout Subsubsection*

Description
\layout Standard

The motivation for choosing this problem for a hardware implementation is
 two fold: Firstly it is a hard problem for GP to solve 
\begin_inset LatexCommand \cite{langdon:1998:antspace}

\end_inset 

, and secondly it demonstrates that a custom hardware design can efficiently
 encode the function and terminal set as native `instructions'.
 That is to say one of the attractions of using an FPGA is that custom instructi
ons not normally found in production CPUs can easily be constructed.
\layout Standard

This popular test problem was originally described by Jefferson 
\emph on 
et al.

\emph default 
 
\begin_inset LatexCommand \cite{jefferson:1991}

\end_inset 

 and in the context of GP was described by Koza in 1990 
\begin_inset LatexCommand \cite{koza:1991:alife}

\end_inset 

.
 It involves finding a program for an ant-like machine that enables it to
 navigate its way round a trail of food on a toroidal grid of cells within
 a fixed number of time steps.
 The function set 
\begin_inset Formula $\mathcal{F}=\{\mathtt{IF}\_\mathtt{FOOD,}\, \mathtt{PROGN2}\}$
\end_inset 

 where 
\begin_inset Formula $\mathtt{IF}\_\mathtt{FOOD}$
\end_inset 

 is a two argument function that looks at the cell ahead and if it contains
 food evaluate the first terminal, otherwise evaluate the second terminal.
 
\begin_inset Formula $\mathtt{PROGN2}$
\end_inset 

 evaluates its first and second terminals in sequence.
 The terminal set 
\begin_inset Formula $\mathcal{T}=\{\mathtt{LEFT,}\, \mathtt{RIGHT,}\, \mathtt{MOVE,}\, \mathtt{NOP}\}$
\end_inset 

, where 
\begin_inset Formula $\mathtt{LEFT}$
\end_inset 

 and 
\begin_inset Formula $\mathtt{RIGHT}$
\end_inset 

 change the direction the ant is facing, 
\begin_inset Formula $\mathtt{MOVE}$
\end_inset 

 moves the ant one space forwards to a new cell, and if the new cell contains
 food, the food is eaten.
 
\begin_inset Formula $\mathtt{NOP}$
\end_inset 

 is a no-operation terminal and has no effect on the ant.
 The 
\begin_inset Formula $\mathtt{NOP}$
\end_inset 

 terminal is included to make the number of terminals a power of 2, which
 simplifies the hardware logic.
 Each time 
\begin_inset Formula $\mathtt{LEFT,}\, \mathtt{RIGHT}$
\end_inset 

 or 
\begin_inset Formula $\mathtt{MOVE}$
\end_inset 

 is executed, the ant consumes one time step.
 The run stops when either all the time steps have been used, or the ant
 has eaten all the food.
 
\layout Standard

All the results in this section use the Santa Fe trail 
\begin_inset LatexCommand \cite{jefferson:1991}

\end_inset 

 shown in Figure 
\begin_inset LatexCommand \ref{fig:santefe trail}

\end_inset 

, which has 89 pellets of food on a 32x32 grid.
 All the food pellets are present at the start of each run.
 The Santa Fe trail is considered to be harder than the alternative John
 Muir trail 
\begin_inset LatexCommand \cite{koza:1991:alife}

\end_inset 

.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 


\begin_inset Float figure
placement htbp
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/santafe.eps
	display color
	size_type 1
	height 8cm
	keepAspectRatio
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 232pt
	lyxheight 141pt
\end_inset 


\layout ShortCaption

Santa Fe artificial ant trail.
\layout Caption


\begin_inset LatexCommand \label{fig:santefe trail}

\end_inset 

Santa Fe artificial ant trail.
 The trail is denoted by the grey squares.
 The darker squares contain food pellets.
\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend 
\end_inset 


\layout Standard

The population size is 1024, the maximum program length is 31 and all experiment
s were run for 32 generations.
 The maximum number of time steps for the ant to complete its trail is 600
\begin_inset Foot
collapsed false

\layout Standard

This differs from the results that were published in 
\begin_inset LatexCommand \cite{martin:2002:eurogp2002}

\end_inset 

, which used 1024 timesteps.
\end_inset 

.
 The original work by Koza 
\begin_inset LatexCommand \cite{koza:book}

\end_inset 

 quoted the number of timesteps as 400, but it has subsequently been shown
 that the number is actually 600
\begin_inset Foot
collapsed false

\layout Standard

From a private email discussion with Bill Langdon.
\end_inset 

.
 The figure of 600 has been used in most of the reported experimental work
 using the artificial ant problem, for example, 
\begin_inset LatexCommand \cite{icec94:maxwell}

\end_inset 

, 
\begin_inset LatexCommand \cite{langdon:1998:antspace}

\end_inset 

, 
\begin_inset LatexCommand \cite{miller:2000:CGP}

\end_inset 

 and others.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout Caption


\begin_inset LatexCommand \label{table:ant problem parameters}

\end_inset 

Parameters for the artificial ant problem
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="left" valignment="top" width="1.8in">
<column alignment="left" valignment="top" width="3.8in">
<row topline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Parameter
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout List
\labelwidthstring 00.00.0000

Value
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Population Size
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

1024
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Functions
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathtt{IF}\_\mathtt{FOOD(T}_{a},\, \mathtt{T}_{b}\mathtt{)}$
\end_inset 

, 
\begin_inset Formula $\mathtt{PROGN(T}_{a},\, \mathtt{T}_{b}\mathtt{)}$
\end_inset 


\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Terminals
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathtt{MOVE,}\, \mathtt{LEFT,}\, \mathtt{RIGHT,}\, \mathtt{NOP}$
\end_inset 


\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Max Program Size
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

32
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Generations
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

32
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Fitness Cases
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

One fitness case.
 The program was run until 600 timesteps had elapsed or the ant had consumed
 all the food.
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Raw Fitness
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

The number of pieces of food not eaten in the time available.
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 

The full set of parameters is given in Table 
\begin_inset LatexCommand \ref{table:ant problem parameters}

\end_inset 

.
\layout Subsubsection*

Artificial ant problem results
\layout Standard

The artificial ant problem was executed using the same environments as the
 regression problem and the results are presented in Table 
\begin_inset LatexCommand \ref{table:Results of running the ANT problem}

\end_inset 

.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout Caption


\begin_inset LatexCommand \label{table:Results of running the ANT problem}

\end_inset 

Results of running the artificial ant problem
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="8" columns="7">
<features>
<column alignment="left" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Measurement
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

PowerPC
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Handel-C
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Parallel fitness evaluations
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

4
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

8
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

16
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

32
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Cycles
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2.26e9
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

33.21e6
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

18.08e6
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

10.25e6
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

5.87e6
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

3.28e6
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Clock Frequency
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

200\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

40\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

38\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

36\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

33\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

31\SpecialChar ~
MHz
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Number of Slices
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1\SpecialChar ~
835
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2\SpecialChar ~
636
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

4\SpecialChar ~
840
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

7\SpecialChar ~
429
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

14\SpecialChar ~
908
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

69
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

125
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

220
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

386
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

691
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

13
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

23
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

39
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

63
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

107
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Elapsed time
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

11.3\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.83\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.47\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.28\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.17_s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

0.11\SpecialChar ~
s
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 


\layout Standard

To verify that the correct trajectory had been followed by the ant, over
 150 example correct programs were examined using a graphical ant simulator.
 A screen-shot of the simulator is shown in Figure 
\begin_inset LatexCommand \ref{cap:Simple-graphical-simulator}

\end_inset 

.
 It was written using the ncurses screen handling package.
 All the programs examined followed the trail correctly.
\layout Standard


\begin_inset Float figure
placement htbp
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/anttrail-gui.eps
	display default
	size_type 1
	height 10cm
	keepAspectRatio
	rotateOrigin center
	lyxsize_type 0
	lyxheight 10cm
\end_inset 


\layout ShortCaption

Simple graphical simulator for the artificial ant.
\layout Caption


\begin_inset LatexCommand \label{cap:Simple-graphical-simulator}

\end_inset 

Simple graphical simulator for the artificial ant.
 The ant is at position x=12,y=16 and has eaten 24 of the 89 pellets of
 food.
 The ant is currently facing east and has consumed 83 of the possible 600
 timesteps so far.
\end_inset 


\layout Standard


\begin_inset Minipage
position 0
inner_position 0
height "0pt"
width "100page%"
collapsed false

\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
noindent
\end_inset 

 A 100% correct ant found during one run is:
\layout LyX-Code

IF_FOOD(MOVE,NOP)
\newline 
IF_FOOD(LEFT,LEFT)
\newline 
IF_FOOD(NOP,LEFT)
\newline 
PROGN(MOVE,LEFT)
\newline 
IF_FOOD(MOVE,RIGHT)
\layout Comment

0 2 3
\layout Comment

0 1 1
\layout Comment

0 3 0
\layout Comment

1 2 0
\layout Comment

0 2 1
\end_inset 


\layout Standard

This program used 558 timesteps to complete the trail, and was used to display
 the behaviour in Figure 
\begin_inset LatexCommand \ref{cap:Simple-graphical-simulator}

\end_inset 

.
\layout Standard

Figure 
\begin_inset LatexCommand \ref{fig:speedup for ant}

\end_inset 

 shows the speedup results for the artificial ant problem, and gives both
 the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 and 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

.
\layout LyX-Code


\begin_inset Float figure
placement htbp
wide false
collapsed false

\layout LyX-Code
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/ant-plot.eps
	display color
	size_type 1
	width 4in
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 288pt
	lyxheight 201pt
\end_inset 


\layout ShortCaption

Speedup for the artificial ant problem.
\layout Caption


\begin_inset LatexCommand \label{fig:speedup for ant}

\end_inset 

The speedup factors for the number of cycles (
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

) and the time (
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

) for the artificial ant problem.
 The 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 shows a nearly linear increase as the number of parallel fitness evaluations
 is increased, while the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

 shows a non-linear relationship due to the increased routing delays.
\end_inset 


\layout Standard

These results show, that for the artificial ant problem, increasing the
 number of parallel fitness evaluations increases the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 factor almost linearly, but because the routing delay on the FPGA increases
 with larger designs, the maximum clock frequency decreases, offsetting
 some of the gains made by increasing the parallelism.
\layout Standard

The number of slices used for 32 parallel evaluations is nearly 80% of the
 total available on the chip.
 This is effectively the limit for the XCV2000E FPGA.
 It is worth remarking that a PC with 750\SpecialChar ~
MiB of RAM was required to run
 the Handel-C compiler and the place and route tools before this design
 could be implemented, and a PC with a 1.4\SpecialChar ~
GHz Athlon CPU required nearly
 four hours to complete the place and route.
 This is in contrast to a modest 500\SpecialChar ~
MHz Pentium machine capable of compiling
 and running lilgp and other popular GP packages.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Using Equation 
\begin_inset LatexCommand \ref{EQU:projectedCycles}

\end_inset 

 for the artificial ant problem requires an estimate of the number of fitness
 cases
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Although the ant problem specifies a single fitness case, the program is
 run repeatedly until either all the food is consumed, or all the timesteps
 have been used up
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Using the shortest viable program length of 4 to consume all 600 timesteps
 gives an estimate of 150 for 
\begin_inset Formula $n$
\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Applying Equation 
\begin_inset LatexCommand \ref{EQU:projectedCycles}

\end_inset 

 for 32 parallel fitness evaluations, and given that 
\begin_inset Formula $c=4$
\end_inset 

, the predicted worst case number of cycles is 
\begin_inset Formula $9.8\times 10^{6}$
\end_inset 

.
 The measured value 
\begin_inset Formula $4.2\times 10^{6}$
\end_inset 

 is better than this worst case prediction
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
\layout Subsubsection

Comparison of hardware GP to using a standard PC
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

The results shown so far have compared the hardware implementation of the
 algorithm with a software implementation of the same algorithm
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Although this shows the speedup that the hardware implementation is capable
 of it has only compared a relatively slow processor (200\SpecialChar ~
MHz) to the hardware
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

Using a slow processor does not help a practitioner to decide whether a
 hardware or software implementation is appropriate, especially with modern
 processors running at over 2\SpecialChar ~
GHz
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

In addition, the results so far have only compared the performance of the
 same algorithm when run on the hardware platform and a software platform
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

While this comparison gives an accurate measure of the effect of using hardware,
 it does not give an indication of how useful the hardware GP is compared
 to a standard tree based GP system
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

This section addresses the above limitations by comparing the performance
 of the hardware with the same algorithm running on a 1.4\SpecialChar ~
GHz Athlon processor,
 and by comparing the hardware GP to a standard tree based GP system, again
 running on a 1.4\SpecialChar ~
GHz Athlon PC
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

The package used for the tree based GP was lilgp
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

This package was chosen because of its popularity within the GP community
 (online survey carried out in 1998 
\begin_inset LatexCommand \cite[pp 4.8]{martin:msc:1998}

\end_inset 

)
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

The artificial ant problem was used for these experiments.
 For the lilgp implementation, the standard lilgp settings were used
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
\layout Standard

Table 
\begin_inset LatexCommand \ref{cap:Comparison-to-athlon}

\end_inset 

 shows the results of running these experiments.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart
\end_inset 


\begin_inset Float table
wide false
collapsed false

\layout Caption


\begin_inset LatexCommand \label{cap:Comparison-to-athlon}

\end_inset 

Comparison of the performance of the artificial ant running in hardware
 to the artificial ant running on a 1.4\SpecialChar ~
GHz processor, using both the hardware
 algorithm and lilgp.
 The hardware implementation used 32 parallel fitness evaluations.
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="left" valignment="top" width="1.5in">
<column alignment="left" valignment="top" width="1.5in">
<column alignment="left" valignment="top" width="2.5in">
<row topline="true" bottomline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Platform
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Clock Speed
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Time (seconds)
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Hardware GP
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

31\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.11
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Athlon
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1.4\SpecialChar ~
GHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

0.94
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Athlon lilgp\SpecialChar ~
1.1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1.4\SpecialChar ~
GHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

7.94
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 

 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

It can be seen from this table that the hardware implementation is approximately
 8.5 times faster than the same algorithm running on a 1.4\SpecialChar ~
GHz processor.
 When compared with the standard lilgp program running on the same processor,
 the hardware implementation is over 70 times faster.
 This large speedup can be attributed to a number of factors.
 Firstly, lilgp uses a tree based GP representation and so imposes an overhead
 when traversing the tree structure and invoking the functions which are
 accessed using function pointers.
 Secondly, because of the large data set used in lilgp (approximately 3\SpecialChar ~
MBytes),
 the effect of the data cache on the Athlon processor is reduced.
 Thirdly, in lilgp the programs lengths are not tightly constrained, so
 the programs that are being evaluated will tend to be longer than the hardware
 GP algorithm
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
\layout Subsection


\begin_inset LatexCommand \label{sec:boolean even-6-parity problem}

\end_inset 

Boolean Even-6-Parity Problem
\layout Standard

The objective of this problem is to evolve a function that takes 
\begin_inset Formula $n$
\end_inset 

 Boolean inputs and returns 1 if an even number of inputs evaluate to 1,
 0 otherwise.
\layout Subsubsection*

Description
\layout Standard

This problem was chosen because it has been well studied and represents
 another popular test problem.
 It is a more arduous problem than the artificial ant problem since it requires
 a larger population, longer program lengths and is run for more generations.
 However, the fitness function is simpler, so more parallel fitness function
 evaluations can be accommodated on the FPGA than the ant problem.
\layout Standard

For this problem the population size is 2048, the maximum program length
 is 256 and all experiments were run for 64 generations.
 The full set of parameters is given in Table 
\begin_inset LatexCommand \ref{table:6parity problem parameters}

\end_inset 

.
 The function set for this problem included the 
\family typewriter 
NOT
\family default 
 and 
\family typewriter 
XOR
\family default 
 functions because it has been shown that for Boolean-
\begin_inset Formula $n$
\end_inset 

-parity problems the standard function set (
\family typewriter 
AND, OR, NAND, NOR
\family default 
 from 
\begin_inset LatexCommand \cite{koza:book}

\end_inset 

) standard GP was unable to find solutions when 
\begin_inset Formula $n\geq $
\end_inset 

6 
\begin_inset LatexCommand \cite{koza:book}

\end_inset 

.
 However, in 
\begin_inset LatexCommand \cite{koza:book}

\end_inset 

 it was found that if ADFs were used, the 
\family typewriter 
XOR
\family default 
 function was created by the ADFs which allowed solutions to be found.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout Caption


\begin_inset LatexCommand \label{table:6parity problem parameters}

\end_inset 

Parameters for the Boolean even-6-parity problem
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="left" valignment="top" width="1.75in">
<column alignment="left" valignment="top" width="3.5in">
<row topline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Parameter
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Value
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Population Size
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

2048
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Functions
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 

\begin_inset Formula $\mathtt{AND(R}_{n},\, \mathtt{R}_{m}\mathtt{)},\, \mathtt{OR(R}_{n},\, \mathtt{R}_{m}),\, \mathtt{NOT(R}_{n},\, \mathtt{R}_{m}\mathtt{),}\, \mathtt{XOR(R}_{n},\, \mathtt{R}_{m}\mathtt{)}$
\end_inset 


\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Terminals
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

16 registers
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Max Program Size
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

256
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Generations
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

64
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Fitness Cases
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

All 
\begin_inset Formula $2^{6}=64$
\end_inset 

 test cases
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Raw Fitness
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

The number of fitness cases that were incorrect.
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 


\layout Subsubsection*

Boolean even-6-parity results
\layout Standard

The Boolean even-6-parity problem was executed using the same environments
 as the regression problem and the results are presented in Table 
\begin_inset LatexCommand \ref{table:Results of running the 6-parity problem}

\end_inset 

.
\layout Standard


\begin_inset Float table
placement htbp
wide false
collapsed false

\layout Caption


\begin_inset LatexCommand \label{table:Results of running the 6-parity problem}

\end_inset 

Results of running the Boolean even-6-parity problem
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="8" columns="8">
<features>
<column alignment="left" valignment="top" width="2.8cm">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Measurement
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

PowerPC
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\size small 
Handel-C
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Parallel fitness evaluations
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

4
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

8
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

16
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

32
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

64
\end_inset 
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Cycles
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

90.8e9
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1.2e9
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

617e6
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

341e6
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

173e6
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

86e6
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

40e6
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Clock Frequency
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

200\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

48\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

46\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

44\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

41\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

38\SpecialChar ~
MHz
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

34\SpecialChar ~
MHz
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Number of Slices
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

n/a
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1\SpecialChar ~
418
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1\SpecialChar ~
654
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

2\SpecialChar ~
161
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

6\SpecialChar ~
396
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

10\SpecialChar ~
124
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

19\SpecialChar ~
051
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

75
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

147
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

266
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

524
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

1055
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

2270
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 


\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

1
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

18
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

34
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

88
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

163
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

281
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

419
\end_inset 
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Elapsed time
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

454\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

25\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

13.4\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

7.75\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

4.22\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

2.26\SpecialChar ~
s
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

1.18\SpecialChar ~
s
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\end_inset 


\layout Standard

Figure 
\begin_inset LatexCommand \ref{fig:speedup for 6-parity}

\end_inset 

 shows the speedup results for the Boolean even-6-parity problem, and gives
 both the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 and 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

.
 As for the artificial ant problem, these results show that for the Boolean
 even-6-parity problem, increasing the number of parallel fitness evaluations
 increases the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 factor almost linearly, but because the routing delay on the FPGA increases
 with larger designs, the maximum clock frequency decreases, offsetting
 some of the gains made by increasing the parallelism.
 The number of slices used for 64 parallel evaluations is nearly 100% of
 the total available on the chip.
 With 64 parallel evaluations, the design took 14 hours to place and route
 using a 1.4\SpecialChar ~
GHz Athlon workstation with 1\SpecialChar ~
GiB of RAM.
\begin_inset Float figure
placement htbp
wide false
collapsed false

\layout LyX-Code
\align center 

\begin_inset Graphics FormatVersion 1
	filename images/bool-plot.eps
	display color
	size_type 1
	width 4in
	rotateOrigin center
	lyxsize_type 1
	lyxwidth 288pt
	lyxheight 201pt
\end_inset 


\layout ShortCaption

Speedup for the Boolean even-6-parity problem.
\layout Caption


\begin_inset LatexCommand \label{fig:speedup for 6-parity}

\end_inset 

The speedup factors for the number of cycles (
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

) and the time (
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

) for the Boolean even-6-parity problem.
 The 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{cycles}}$
\end_inset 

 shows a nearly linear increase as the number of parallel fitness evaluations
 is increased, while the 
\begin_inset Formula $\mathrm{Speedup}_{\mathrm{time}}$
\end_inset 

 shows a non-linear relationship due to the increased routing delays.
\end_inset 


\layout Standard

Using Equation 
\begin_inset LatexCommand \ref{EQU:projectedCycles}

\end_inset 

 for 64 parallel fitness evaluations and given that 
\begin_inset Formula $c=2$
\end_inset 

, the predicted worst case number of cycles is 
\begin_inset Formula $67\times 10^{6}$
\end_inset 

.
 The measured value of 
\begin_inset Formula $40\times 10^{6}$
\end_inset 

 is better than the worst case predicted value.
\layout Section

Discussion
\layout Subsection

Effect of Implementing Pipelines and Increasing Parallelism
\layout Standard

A direct comparison between the XOR problem in Chapter 
\begin_inset LatexCommand \ref{main:implementation}

\end_inset 

 and the XOR problem in this chapter (sect.
 
\begin_inset LatexCommand \ref{sec: chapter 5 xor}

\end_inset 

) shows that using pipelines provides a useful speedup, but because the
 fitness evaluation is much shorter than the WriteBack/Select/Breed sub-stage,
 there is no benefit to increasing the number of parallel fitness evaluations.
 It is also clear that for small populations there is a limit to the number
 of parallel fitness evaluations that can be accommodated.
 However, the situation is reversed in the artificial ant problem and the
 even-6-parity problem because the time needed for fitness evaluation is
 much larger than the WriteBack/Select/Breed phase.
 Clearly, for other problems where the fitness function takes a long time
 it would be worth devising efficient pipelines for the fitness evaluation
 functions.
\layout Standard

The speedups achieved for the Boolean even-6-parity problem are better than
 those achieved for the artificial ant problem.
 This is mainly because the functions in the function set 
\begin_inset Formula $\mathcal{F}$
\end_inset 

 for the Boolean even-6-parity problem are simpler than the artificial ant
 problem, requiring fewer steps to be executed for each instruction.
 The intrinsic parallelism of Handel-C also allowed the functions to be
 implemented very efficiently.
 A second reason for the improved throughput is that the Boolean even-6-parity
 problem has a longer mean program length than the artificial ant problem.
 Stallings 
\begin_inset LatexCommand \cite{stallings:2000}

\end_inset 

 provides an equation that gives the speedup factor of a pipeline with 
\begin_inset Formula $k$
\end_inset 

 stages: 
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
nopagebreak
\end_inset 


\layout Standard


\begin_inset Formula \begin{equation}
S_{k}=\frac{T_{1}}{T_{k}}=\frac{nk\tau }{\left[k+\left(n-1\right)\right]\tau }=\frac{nk}{k+(n-1)}\label{EQU:PipelineSpeedup}\end{equation}

\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
noindent 
\end_inset 

where 
\begin_inset Formula $\tau $
\end_inset 

 is the maximum stage delay, 
\begin_inset Formula $k$
\end_inset 

 is the number of stages in an instruction pipeline and 
\begin_inset Formula $n$
\end_inset 

 is the number of instructions executed.
 
\layout Standard

From Equation 
\begin_inset LatexCommand \ref{EQU:PipelineSpeedup}

\end_inset 

 it can be seen that the longer the instruction stream, the better the speedup.
 For the artificial ant problem, the mean program length was 16 and the
 pipeline had two stages.
 This gives a speedup factor for the pipeline of 1.88, while for the Boolean
 even-6-parity problem the mean program length was 128.
 Again the pipeline had two stages.
 This gives a pipeline speedup factor of 1.98.
\layout Standard

Equation 
\begin_inset LatexCommand \vref{EQU:projectedCycles}

\end_inset 

 was used to predict the worst case number of cycles that would be needed
 to execute the programs.
 In all cases, the measured results were less than the predicted worst case
 results, confirming that the pipeline implementation was effective and
 that the fitness evaluation for all the problems was the dominant thread
 of execution.
\layout Subsection

Comparison With a Popular Software GP system.
\layout Standard

While this may appear to be an unfair comparison, a lot of work in GP is
 centered around exploring the detailed operation of GP, which often requires
 hundreds or thousands of runs with minor parameter changes, and performance
 is still likely to be an issue even with processors running at 1\SpecialChar ~
GHz and
 beyond.
 This comparison was made to see if using a hardware implementation would
 be of benefit to researchers.
 The results show that where a fixed problem type needs to be run many times,
 a hardware implementation using many parallel fitness evaluations could
 reduce the time required for extended runs 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbstart 
\end_inset 

.
 In particular, when compared to lilgp running on a 1.4\SpecialChar ~
GHz Athlon processor,
 the hardware implementation of the artificial ant problem was 70 times
 faster.
 This result shows that despite the availability of fast processors that
 a hardware GP system would be useful for some hard problems
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
cbend
\end_inset 

.
\layout Section

Summary
\layout Standard

Moving the population storage to off-chip SRAM enabled the design to solve
 problems, such as the artificial ant and Boolean even-6-parity problems,
 which require larger population sizes.
 Pipelining the breed, selection and evaluation phases gives a performance
 boost to problems that have short evaluation time requirements like the
 XOR problem.
 For problems like the artificial ant problem and the Boolean even-6-parity
 problem that require extended fitness evaluation times, the benefits of
 using a pipeline are even greater, giving a nearly linear increase in throughpu
t as the number of parallel fitness evaluations is increased.
\the_end
