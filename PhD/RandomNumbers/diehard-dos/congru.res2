       NOTE: Most of the tests in DIEHARD return a p-value, which             
       should be uniform on [0,1) if the input file contains truly            
       independent random bits.   Those p-values are obtained by              
       p=F(X), where F is the assumed distribution of the sample              
       random variable X---often normal. But that assumed F is just           
       an asymptotic approximation, for which the fit will be worst           
       in the tails. Thus you should not be surprised with                    
       occasional p-values near 0 or 1, such as .0012 or .9983.               
       When a bit stream really FAILS BIG, you will get p's of 0 or           
       1 to six or more places.  By all means, do not, as a                   
       Statistician might, think that a p < .025 or p> .975 means             
       that the RNG has "failed the test at the .05 level".  Such             
       p's happen among the hundreds that DIEHARD produces, even              
       with good RNG's.  So keep in mind that " p happens".                   
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
     ::             The  OVERLAPPING SUMS test                        ::      
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::      
     :: form [0,1) variables.  Then overlapping sums,                 ::      
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::      
     :: The S's are virtually normal with a certain covariance mat-   ::      
     :: rix.  A linear transformation of the S's converts them to a   ::      
     :: sequence of independent standard normals, which are converted ::      
     :: to uniform variables for a KSTEST. The  p-values from ten     ::      
     :: KSTESTs are given still another KSTEST.                       ::      
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
                Test no.  1      p-value 1.000000
                Test no.  2      p-value 1.000000
                Test no.  3      p-value 1.000000
                Test no.  4      p-value 1.000000
                Test no.  5      p-value 1.000000
                Test no.  6      p-value 1.000000
                Test no.  7      p-value 1.000000
                Test no.  8      p-value 1.000000
                Test no.  9      p-value 1.000000
                Test no. 10      p-value 1.000000
   Results of the OSUM test for congru.bin     
        KSTEST on the above 10 p-values: 1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
     ::     This is the RUNS test.  It counts runs up, and runs down, ::      
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::      
     :: ing the 32-bit integers in the specified file. This example   ::      
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::      
     :: contains an up-run of length 3, a down-run of length 2 and an ::      
     :: up-run of (at least) 2, depending on the next values.  The    ::      
     :: covariance matrices for the runs-up and runs-down are well    ::      
     :: known, leading to chisquare tests for quadratic forms in the  ::      
     :: weak inverses of the covariance matrices.  Runs are counted   ::      
     :: for sequences of length 10,000.  This is done ten times. Then ::      
     :: repeated.                                                     ::      
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
           The RUNS test for file congru.bin     
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for congru.bin     :
       runs up; ks test for 10 p's: .337799
     runs down; ks test for 10 p's: .928238
                 Run test for congru.bin     :
       runs up; ks test for 10 p's: .529086
     runs down; ks test for 10 p's: .142416

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::      
     :: the number of wins and the number of throws necessary to end  ::      
     :: each game.  The number of wins should be (very close to) a    ::      
     :: normal with mean 200000p and variance 200000p(1-p), with      ::      
     :: p=244/495.  Throws necessary to complete the game can vary    ::      
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::      
     :: A chi-square test is made on the no.-of-throws cell counts.   ::      
     :: Each 32-bit integer from the test file provides the value for ::      
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::      
     :: and taking 1 plus the integer part of the result.             ::      
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::      
                Results of craps test for congru.bin     
  No. of wins:  Observed Expected
                               177676    98585.86
                 177676= No. of wins, z-score=****** pvalue=1.00000
   Analysis of Throws-per-Game:
 Chisq=******* for 20 degrees of freedom, p=********
               Throws Observed Expected  Chisq     Sum
                  1    66841    66666.7    .456     .456
                  2    34348    37654.3 290.319  290.775
                  3    24903    26954.7 156.173  446.948
                  4    17522    19313.5 166.171  613.119
                  5    12746    13851.4  88.218  701.337
                  6     9522     9943.5  17.871  719.208
                  7     7151     7145.0    .005  719.213
                  8     5365     5139.1   9.932  729.146
                  9     4217     3699.9  72.281  801.426
                 10     3205     2666.3 108.840  910.267
                 11     2462     1923.3 150.867 1061.134
                 12     1889     1388.7 180.206 1241.340
                 13     1602     1003.7 356.620 1597.960
                 14     1319      726.1 484.042 2082.002
                 15     1030      525.8 483.386 2565.388
                 16      798      381.2 455.892 3021.280
                 17      720      276.5 711.137 3732.417
                 18      596      200.8 777.571 4509.988
                 19      512      146.0 917.684 5427.671
                 20      382      106.2 716.068 6143.739
                 21     2870      287.1********29379.303
            SUMMARY  FOR congru.bin     
                p-value for no. of wins:1.000000
                p-value for throws/game:********

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file congru.res2    
